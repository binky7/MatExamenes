/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.ui;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.AncestorEvent;
import javax.swing.event.AncestorListener;
import javax.swing.table.DefaultTableModel;
import modelo.dto.CursoDTO;
import modelo.dto.ExamenDTO;
import modelo.dto.UsuarioDTO;
import vista.controlador.CVMantenerExamenes;
import vista.controlador.Validador;
import vista.interfaz.InterfaceVista;

/**
 *
 * @author Jesus Donaldo
 */
public class VistaConsultarExamenes extends javax.swing.JPanel
implements InterfaceVista, AncestorListener {

    private CVMantenerExamenes controlVista;
    private InterfaceVista padre;
    /**
     * Creates new form ConsultarExamenes
     */
    public VistaConsultarExamenes() {
        initComponents();
        
        addAncestorListener(this);
    }

    public void setPadre(InterfaceVista padre) {
        this.padre = padre;
    }
    
    public void setControlador(CVMantenerExamenes controlVista) {
        this.controlVista = controlVista;
    }
    
    private void consultarCursos() {
        List<CursoDTO> cursos = controlVista.obtenerCursos();
        
        if(cursos != null && !cursos.isEmpty()) {
            mostrarCursos(cursos);
        }
        else {
            JOptionPane.showMessageDialog(this, "No hay cursos");
            padre.mostrarVista(Vista.HOME);
            limpiar();
        }
    }
    
    private void mostrarCursos(List<CursoDTO> cursos) {
        
        cmbCurso.removeAllItems();
        
        for(CursoDTO curso : cursos) {
            //System.out.println(cmbCurso.getSelectedIndex());
            cmbCurso.addItem(curso.getNombre());
        }
        
        cmbCurso.setSelectedIndex(-1);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblExamenes = new javax.swing.JTable();
        lblCurso = new javax.swing.JLabel();
        cmbCurso = new javax.swing.JComboBox();
        lblNombre = new javax.swing.JLabel();
        txtfNombre = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        lblExamenes = new javax.swing.JLabel();
        lblTitulo1 = new javax.swing.JLabel();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(790, 467));

        jPanel1.setAutoscrolls(true);
        jPanel1.setPreferredSize(new java.awt.Dimension(790, 579));

        tblExamenes.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tblExamenes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Título", "Fecha Creación", "Fecha Modificación", "Autor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblExamenes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblExamenes.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblExamenes);
        if (tblExamenes.getColumnModel().getColumnCount() > 0) {
            tblExamenes.getColumnModel().getColumn(0).setResizable(false);
            tblExamenes.getColumnModel().getColumn(1).setResizable(false);
            tblExamenes.getColumnModel().getColumn(2).setResizable(false);
            tblExamenes.getColumnModel().getColumn(3).setResizable(false);
            tblExamenes.getColumnModel().getColumn(4).setResizable(false);
        }

        lblCurso.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblCurso.setText("Curso:");

        cmbCurso.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cmbCurso.setToolTipText("filtrar la búsqueda por curso");
        cmbCurso.setPreferredSize(new java.awt.Dimension(78, 25));

        lblNombre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblNombre.setText("Título del Examen:");

        txtfNombre.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtfNombre.setToolTipText("filtrar la búsqueda por título del examen");
        txtfNombre.setPreferredSize(new java.awt.Dimension(6, 30));

        btnBuscar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/buscar24_2.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.setPreferredSize(new java.awt.Dimension(77, 30));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarExamenes(evt);
            }
        });

        lblExamenes.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblExamenes.setText("Exámenes:");

        lblTitulo1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblTitulo1.setText("Consultar Exámenes");

        btnModificar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/modificar24.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setPreferredSize(new java.awt.Dimension(77, 30));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasarControlVistaModificar(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/eliminar24.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setPreferredSize(new java.awt.Dimension(77, 30));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarExamen(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/cancelar24.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setPreferredSize(new java.awt.Dimension(77, 30));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(271, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(270, 270, 270))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62))))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(281, 281, 281)
                            .addComponent(lblTitulo1))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(62, 62, 62)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(288, 288, 288)
                                        .addComponent(lblExamenes))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(lblCurso)
                                            .addGap(18, 18, 18)
                                            .addComponent(cmbCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(42, 42, 42)
                                            .addComponent(lblNombre)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(469, 469, 469)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(193, 193, 193))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(1, 1, 1)
                    .addComponent(lblTitulo1)
                    .addGap(32, 32, 32)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblCurso)
                        .addComponent(lblNombre)
                        .addComponent(txtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(25, 25, 25)
                    .addComponent(lblExamenes)
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(294, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void consultarExamenes(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarExamenes
        //Para comprobar que se hizo una consulta
        boolean ok = true;
        UsuarioDTO usuarioActual = padre.obtenerUsuarioActual();
        List<ExamenDTO> examenes = null;
        //Para validar que se haya seleccionado un curso
        int seleccionado = cmbCurso.getSelectedIndex();
        //Obtener el valor de lo ingresado en el titulo
        String titulo = txtfNombre.getText();
        //El curso seleccionado si ubiera...
        String curso = "";
        
        //Parametro para la cosulta, null si es administrador
        UsuarioDTO usuario = null;
        //Parametro para la consulta, true si es administrador
        boolean todos = true;

        //Para diferenciar entre una consulta a los examenes publicos o a todos
        if (usuarioActual.getTipo() == UsuarioDTO.Tipo.Maestro) {
            //Si usuario actual es maestro....
            usuario = usuarioActual;
            todos = false;
        }

        if(seleccionado != -1) {
            curso = cmbCurso.getSelectedItem().toString();
        }
        
        if (seleccionado != -1 && !Validador.estaVacio(titulo)) {

            examenes = controlVista.obtenerExamenesPorCursoYTitulo(curso, titulo,
                    todos, usuario);
            
        } else if (seleccionado != -1 && Validador.estaVacio(titulo)) {

            //Solo obtener los examenes por curso
            examenes = controlVista.obtenerExamenesPorCurso(curso, todos, usuario);
            
        } else if (!Validador.estaVacio(titulo) && seleccionado == -1) {

            //Obtener examenes por titulo
            examenes = controlVista.obtenerExamenesPorTitulo(titulo, todos,
                    usuario);
        } else {
            //No selecciono curso ni titulo
            JOptionPane.showMessageDialog(this, "Selecciona por lo menos "
                    + "un curso o ingresa un título");
            ok = false;
        }
        
        if (ok) {
            if (examenes != null && !examenes.isEmpty()) {
                mostrarExamenes(examenes);
            } else {
                JOptionPane.showMessageDialog(this, "No hay examenes");
                ((DefaultTableModel)tblExamenes.getModel()).setRowCount(0);
            }
        }
        
    }//GEN-LAST:event_consultarExamenes

    private void mostrarExamenes(List<ExamenDTO> examenes) {
        DefaultTableModel model = (DefaultTableModel) tblExamenes.getModel();
        
        model.setRowCount(0);
        //Mostrar cada reactivo, no remover, si no buscar por medio del for
        for(ExamenDTO examen : examenes) {
            Object[] datos = new Object[5];
            
            datos[0] = examen.getId();
            datos[1] = examen.getTitulo();
            datos[2] = examen.getFechaCreacion();
            datos[3] = examen.getFechaModificacion();
            if(examen.getAutor() != null) {
                datos[4] = examen.getAutor().getUsuario();
            }
            else {
                datos[4] = "Sin autor";
            }
            
            model.addRow(datos);
        }
    }
    
    private void pasarControlVistaModificar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasarControlVistaModificar
        
        if(tblExamenes.getSelectedRow() != -1) {
            int indexExamen = tblExamenes.getSelectedRow();
            String autorExamen = (String) tblExamenes.getValueAt(tblExamenes
                    .getSelectedRow(), 4);
            
            UsuarioDTO usuarioActual = padre.obtenerUsuarioActual();
            
            if((usuarioActual.getTipo() == UsuarioDTO.Tipo.Maestro && 
                    autorExamen.equals(usuarioActual.getUsuario())) ||
                    (usuarioActual.getTipo() == UsuarioDTO.Tipo.Admin)) {
                
                ExamenDTO examen = controlVista
                        .obtenerExamen(indexExamen);
                
                if(examen != null) {
                    padre.mostrarVistaConEntidad(examen, Vista.ModificarExamen);
                }
                else {
                    JOptionPane.showMessageDialog(this, "Ha ocurrido un error",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            else {
                JOptionPane.showMessageDialog(this, "No cuentas con los permisos "
                        + "para realizar esta acción");
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "Selecciona primero un examen");
        }
    }//GEN-LAST:event_pasarControlVistaModificar

    private void eliminarExamen(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarExamen

        if(tblExamenes.getSelectedRow() != -1) {
            
            int q = JOptionPane.showConfirmDialog(this, "¿Estás segur@ de que "
                    + "quieres eliminar el examen seleccionado?",
                    "Confirmación", JOptionPane.YES_NO_OPTION);
            if (q != 0) {
                return;
            }
            
            boolean ok = controlVista.eliminarExamen(tblExamenes
                    .getSelectedRow());
            
            if(ok) {
                JOptionPane.showMessageDialog(this, "Examen eliminado");
                ((DefaultTableModel)tblExamenes.getModel())
                        .removeRow(tblExamenes.getSelectedRow());
            }
            else {
                JOptionPane.showMessageDialog(this, "No se pudo eliminar "
                        + "el examen", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "Selecciona un examen");
        }
    }//GEN-LAST:event_eliminarExamen

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        padre.mostrarVista(Vista.HOME);
        limpiar();
    }//GEN-LAST:event_btnCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox cmbCurso;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCurso;
    private javax.swing.JLabel lblExamenes;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblTitulo1;
    private javax.swing.JTable tblExamenes;
    private javax.swing.JTextField txtfNombre;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mostrarVistaConEntidad(Object entidad, Vista vista) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mostrarVista(Vista vista) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mostrarEntidad(Object entidad) {
        //Mostrar los datos del examen en la vista
        ExamenDTO examen = (ExamenDTO) entidad;
        
        int row = tblExamenes.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tblExamenes.getModel();
        
        model.setValueAt(examen.getTitulo(), row, 1);
        model.setValueAt(examen.getFechaModificacion(), row, 3);
    }

    @Override
    public boolean confirmarCambio() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public UsuarioDTO obtenerUsuarioActual() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void limpiar() {
        //Limpiar componentes
        cmbCurso.removeAllItems();
        txtfNombre.setText("");
        ((DefaultTableModel)tblExamenes.getModel()).setRowCount(0);
        
        controlVista.liberarMemoriaConsultar();
    }

    @Override
    public void ancestorAdded(AncestorEvent event) {
        if(isShowing()) {
            consultarCursos();
        }
    }

    @Override
    public void ancestorRemoved(AncestorEvent event) {
        //
    }

    @Override
    public void ancestorMoved(AncestorEvent event) {
        //
    }

}
